package PackageMaven;

import java.sql.*;
import java.io.IOException;
import java.util.Scanner;

public class Test {

	public static void main(String[] args) throws SQLException, IOException {
	System.out.println("init");
    try {
        try (Connection con = DriverManager.getConnection("jdbc:mariadb://localhost/", "root", null)){
            System.out.println("connected");
        }
    } catch (Exception e){
        e.printStackTrace();

}
Connection con = DriverManager.getConnection("jdbc:mariadb://localhost/", "root", null);
Statement st = con.createStatement();

//on récupérera dedans les ID tailles et couleurs
int idColor=0, idTaille=0; 

ResultSet Conn, ColorSet, TailleSet, StockSet;
Conn = st.executeQuery("USE textile");

//couleur = bleu, taille = M

Scanner keyboard = new Scanner(System.in);
System.out.println("écrire la couleur");
String idblue = keyboard.nextLine();	

ColorSet = st.executeQuery("SELECT * FROM T_COULEUR WHERE LIBELLE='"+idblue+"'");

//si l'on a trouvé la couleur correspondante
if(ColorSet.next()){
idColor=ColorSet.getInt("ID_COULEUR");
}
//si idTaille et idColor étaient des strings on aurait dû rajouter +"" après getInt("ID_COULEUR"

//même procédé pour la taille


System.out.println("écrire la taille");
String idM = keyboard.nextLine();



TailleSet = st.executeQuery("SELECT * FROM T_TAILLE WHERE TAILLE='"+idM+"'");

if(TailleSet.next()){
idTaille=TailleSet.getInt("ID_TAILLE");
}

//on récupère l'ensemble des stocks pour la couleur et la taille qui correspondent et trié par ordre croissant de stock

StockSet = st.executeQuery("SELECT * FROM T_STOCK WHERE ID_COULEUR="+idColor+" AND ID_TAILLE="+idTaille+" AND QUANTITE_STOCK < '10' ORDER BY QUANTITE_STOCK ASC");

//on affiche maintenant les informations voulues 
//tant que l'on a du stock (une entité	)
while (StockSet.next()){

System.out.println("identifiant="+ StockSet.getString("ID_ARTICLE")+
		"\nidentifiant couleur="+ StockSet.getString("ID_COULEUR")+"\nidentifiant taille="+ 
		idTaille+"\nstock="+ StockSet.getInt("QUANTITE_STOCK"));
}
}
}
